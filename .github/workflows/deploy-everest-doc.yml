name: Build and deploy EVerest documentation

on:
  workflow_dispatch:
    inputs:
      is_release:
        description: 'Is this snapshot a release?'
        default: 'false'
        required: true
        type: boolean
      build_pdf:
        description: 'Build PDF documentation?'
        required: true
        type: boolean
      build_html:
        description: 'Build HTML documentation?'
        required: true
        type: boolean
      deploy_html:
        description: 'Deploy HTML documentation?'
        required: true
        type: boolean
      snapshot_file:
        description: 'Snapshot file location: <owner>/<repo>/<ref>:<path-to-snapshot.yaml>'
        type: string
        required: true
      github_pages_repo:
        description: 'GithubPages repo: <owner>/<repo>'
        type: string
        required: true
      overwrite_existing:
        description: 'Overwrite existing documentation?'
        default: 'false'
        required: true
        type: boolean

jobs:
  build-docs:
    uses: ./.github/workflows/build-docs.yml
    with:
      build_pdf: ${{ inputs.build_pdf }}
      build_html: ${{ inputs.build_html }}
      snapshot_file: ${{ inputs.snapshot_file }}
      github_pages_repo: ${{ inputs.github_pages_repo }}
    secrets: inherit
  deploy-html-doc:
    if: ${{ inputs.build_html && inputs.deploy_html }}
    needs: [build-docs]
    name: Deploy sphinx documentation
    strategy:
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    container: 
      image: ghcr.io/everest/everest-ci-env:main
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      GITHUB_PAGES_REPO: ${{ inputs.github_pages_repo }}
    steps:
    - name: Setup ssh key and known_hosts
      run: |
        mkdir -p /root/.ssh
        ssh-keyscan github.com >> /root/.ssh/known_hosts
        echo "${{ secrets.SA_GITHUB_SSH_KEY }}" > /root/.ssh/github_actions
        chmod 600 /root/.ssh/github_actions
        ssh-agent -a ${SSH_AUTH_SOCK} > /dev/null
        ssh-add /root/.ssh/github_actions
    - name: Configure git
      run: |
        git config --global user.email "compiler@pionix.de"
        git config --global user.name "Github Service Account"

    - name: Download generated html files
      uses: actions/download-artifact@v3
      with:
        name: ${{ needs.build-docs.outputs.html_artefact_name }}
        path: docs-html
    - name: Checkout ${{ env.GITHUB_PAGES_REPO }}
      uses: actions/checkout@v2
      with:
        repository: ${{ env.GITHUB_PAGES_REPO }}
        path: ${{ env.GITHUB_PAGES_REPO }}
        token: ${{secrets.SA_GITHUB_PAT}}
        ref: main
        fetch-depth: 0
    - name: Download snapshot file
      uses: actions/download-artifact@v3
      with:
        name: snapshot-file
        path: |
          everest-workspace
    - name: Checkout snapshot
      run: |
        edm --config snapshot.yaml --workspace .
      working-directory: everest-workspace

    - name: Remove old doc
      if: ${{ inputs.overwrite_existing }}
      run: |
        rm -rf docs/${{ needs.checkout-snapshot-file.outputs.snapshot_name }}
      working-directory: ${{ env.GITHUB_PAGES_REPO }}
    - name: Update doc and push it
      run: |
        mkdir -p docs
        touch docs/.nojekyll
        mkdir docs/${{ needs.checkout-snapshot-file.outputs.snapshot_name }}
        cp -r ../../docs-html/* docs/${{ needs.checkout-snapshot-file.outputs.snapshot_name }}/
      working-directory: ${{ env.GITHUB_PAGES_REPO }}
    - name: Ensure that the latest release is the default one and create a versions index
      if: ${{ inputs.is_release }}
      run: |
        python3 everest-workspace/everest/docs/scripts/deploy-everest-doc.py \
          --template-directory everest-workspace/everest/docs/templates/ \
          --html-root-directory ${{ env.GITHUB_PAGES_REPO }}/docs/ \
          --is-release True \
          --version-name ${{ needs.checkout-snapshot-file.outputs.snapshot_name }}
    - name: Create a verions index
      if: ${{ !inputs.is_release }}
      run: |
        python3 everest-workspace/everest/docs/scripts/deploy-everest-doc.py \
          --template-directory everest-workspace/everest/docs/templates/ \
          --html-root-directory ${{ env.GITHUB_PAGES_REPO }}/docs/ \
          --is-release False \
          --version-name ${{ needs.checkout-snapshot-file.outputs.snapshot_name }}
    - name: Commit updated github pages
      run: |
        git add --all
        git diff-index --quiet HEAD || git commit -m "Add doc build snapshot ${{ needs.checkout-snapshot-file.outputs.snapshot_name }}"
      working-directory: ${{ env.GITHUB_PAGES_REPO }}

    - name: Push updated doc to ${{ env.GITHUB_PAGES_REPO }}
      if: ${{ !env.ACT }}
      run: |
        git push
      working-directory: ${{ env.GITHUB_PAGES_REPO }}
